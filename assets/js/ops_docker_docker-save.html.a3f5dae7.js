"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4340],{6262:(e,i)=>{i.A=(e,i)=>{const s=e.__vccOpts||e;for(const[e,t]of i)s[e]=t;return s}},1767:(e,i,s)=>{s.r(i),s.d(i,{comp:()=>r,data:()=>l});var t=s(641);const a={},r=(0,s(6262).A)(a,[["render",function(e,i){return(0,t.uX)(),(0,t.CE)("div",null,i[0]||(i[0]=[(0,t.Fv)('<p>应用场景：当我们的环境无法访问互联网镜像库的时候，我们就需要手动上传基础镜像，才能完成镜像的构建和运行。</p><p>镜像导出</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> save</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -o</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> images.tar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [image:tag]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><em>NOTE:</em></p><ul><li><code>-o</code> 表示将镜像输出到某个文件</li><li><code>[image:tag]</code> 表示需要导出的镜像，可以多个，用 空格 分割即可，例如：<code>docker save -o baseimages.tar NGNIX:1.23.1 openjdk:8u</code></li></ul><p>镜像导入</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> load</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> baseimages.tar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',7)]))}]]),l=JSON.parse('{"path":"/ops/docker/docker-save.html","title":"Docker 镜像的导出导入","lang":"zh-CN","frontmatter":{"title":"Docker 镜像的导出导入","date":"2024-11-20T00:00:00.000Z","editLink":false,"category":["运维"],"tag":["Docker"],"description":"应用场景：当我们的环境无法访问互联网镜像库的时候，我们就需要手动上传基础镜像，才能完成镜像的构建和运行。 镜像导出 NOTE: -o 表示将镜像输出到某个文件 [image:tag] 表示需要导出的镜像，可以多个，用 空格 分割即可，例如：docker save -o baseimages.tar NGNIX:1.23.1 openjdk:8u 镜像导入","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/ops/docker/docker-save.html"}],["meta",{"property":"og:site_name","content":"Monk"}],["meta",{"property":"og:title","content":"Docker 镜像的导出导入"}],["meta",{"property":"og:description","content":"应用场景：当我们的环境无法访问互联网镜像库的时候，我们就需要手动上传基础镜像，才能完成镜像的构建和运行。 镜像导出 NOTE: -o 表示将镜像输出到某个文件 [image:tag] 表示需要导出的镜像，可以多个，用 空格 分割即可，例如：docker save -o baseimages.tar NGNIX:1.23.1 openjdk:8u 镜像导入"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-20T08:29:56.000Z"}],["meta",{"property":"article:tag","content":"Docker"}],["meta",{"property":"article:published_time","content":"2024-11-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-20T08:29:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker 镜像的导出导入\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-11-20T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-20T08:29:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HeRongqin\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1732091396000,"updatedTime":1732091396000,"contributors":[{"name":"rongqin.he","email":"2012465448@qq.com","commits":1}]},"readingTime":{"minutes":0.45,"words":134},"filePathRelative":"ops/docker/docker-save.md","localizedDate":"2024年11月20日","excerpt":"<p>应用场景：当我们的环境无法访问互联网镜像库的时候，我们就需要手动上传基础镜像，才能完成镜像的构建和运行。</p>\\n<p>镜像导出</p>\\n<div class=\\"language-shell line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"shell\\" data-title=\\"shell\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">docker</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> save</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -o</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> images.tar</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> [image:tag]</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}')}}]);